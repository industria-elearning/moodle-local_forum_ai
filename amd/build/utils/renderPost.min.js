define("local_forum_ai/utils/renderPost",["exports","core/str"],(function(_exports,_str){Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.renderPost=async function(post){replyTemplateCache&&levelTemplateCache||([replyTemplateCache,levelTemplateCache]=await Promise.all([(0,_str.get_string)("replylevel","local_forum_ai"),(0,_str.get_string)("level","local_forum_ai")]));const indentationLevel=post.level,marginLeft=30*indentationLevel;let borderClass="border-left-primary";1===indentationLevel?borderClass="border-left-info":2===indentationLevel?borderClass="border-left-success":indentationLevel>=3&&(borderClass="border-left-warning");let levelIndicator="";if(indentationLevel>0){const replyText=replyTemplateCache.replace("{$a}",indentationLevel);levelIndicator='<span class="badge badge-secondary mb-2">\n            '.concat("â†³ ".repeat(indentationLevel)).concat(replyText,"\n        </span><br>")}const levelText=levelTemplateCache.replace("{$a}",indentationLevel);return'\n        <div class="mb-3 p-3 border '.concat(borderClass,'"\n             style="margin-left: ').concat(marginLeft,'px; border-left-width: 4px !important;">\n            ').concat(levelIndicator,'\n            <div class="d-flex justify-content-between align-items-start mb-2">\n                <strong class="text-primary">').concat(post.subject,'</strong>\n                <small class="text-muted">').concat(levelText,'</small>\n            </div>\n            <div class="mb-2">\n                <em class="text-info">').concat(post.author,'</em>\n                <small class="text-muted ml-2">(').concat(post.created,')</small>\n            </div>\n            <div class="post-content">\n                ').concat(post.message,"\n            </div>\n        </div>")};let replyTemplateCache=null,levelTemplateCache=null}));

//# sourceMappingURL=renderPost.min.js.map