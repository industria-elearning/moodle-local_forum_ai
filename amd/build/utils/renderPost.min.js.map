{"version":3,"file":"renderPost.min.js","sources":["../../src/utils/renderPost.js"],"sourcesContent":["import { get_string as getString } from 'core/str';\n\nlet replyTemplateCache = null;\nlet levelTemplateCache = null;\n\n/**\n * Renders an individual post with its corresponding indentation level\n *\n * @param {Object} post Post data\n * @returns {Promise<string>} Post HTML (async because it loads translations if not already cached)\n */\nexport async function renderPost(post) {\n    // Preload templates only once\n    if (!replyTemplateCache || !levelTemplateCache) {\n        [replyTemplateCache, levelTemplateCache] = await Promise.all([\n            getString('replylevel', 'local_forum_ai'),\n            getString('level', 'local_forum_ai'),\n        ]);\n    }\n\n    const indentationLevel = post.level;\n    const marginLeft = indentationLevel * 30;\n\n    let borderClass = 'border-left-primary';\n    if (indentationLevel === 1) {\n        borderClass = 'border-left-info';\n    } else if (indentationLevel === 2) {\n        borderClass = 'border-left-success';\n    } else if (indentationLevel >= 3) {\n        borderClass = 'border-left-warning';\n    }\n\n    let levelIndicator = '';\n    if (indentationLevel > 0) {\n        const replyText = replyTemplateCache.replace('{$a}', indentationLevel);\n        levelIndicator = `<span class=\"badge badge-secondary mb-2\">\n            ${'â†³ '.repeat(indentationLevel)}${replyText}\n        </span><br>`;\n    }\n\n    const levelText = levelTemplateCache.replace('{$a}', indentationLevel);\n\n    return `\n        <div class=\"mb-3 p-3 border ${borderClass}\"\n             style=\"margin-left: ${marginLeft}px; border-left-width: 4px !important;\">\n            ${levelIndicator}\n            <div class=\"d-flex justify-content-between align-items-start mb-2\">\n                <strong class=\"text-primary\">${post.subject}</strong>\n                <small class=\"text-muted\">${levelText}</small>\n            </div>\n            <div class=\"mb-2\">\n                <em class=\"text-info\">${post.author}</em>\n                <small class=\"text-muted ml-2\">(${post.created})</small>\n            </div>\n            <div class=\"post-content\">\n                ${post.message}\n            </div>\n        </div>`;\n}\n"],"names":["post","replyTemplateCache","levelTemplateCache","Promise","all","indentationLevel","level","marginLeft","borderClass","levelIndicator","replyText","replace","repeat","levelText","subject","author","created","message"],"mappings":"oLAWiCA,MAExBC,oBAAuBC,sBACvBD,mBAAoBC,0BAA4BC,QAAQC,IAAI,EACzD,mBAAU,aAAc,mBACxB,mBAAU,QAAS,2BAIrBC,iBAAmBL,KAAKM,MACxBC,WAAgC,GAAnBF,qBAEfG,YAAc,sBACO,IAArBH,iBACAG,YAAc,mBACc,IAArBH,iBACPG,YAAc,sBACPH,kBAAoB,IAC3BG,YAAc,2BAGdC,eAAiB,MACjBJ,iBAAmB,EAAG,OAChBK,UAAYT,mBAAmBU,QAAQ,OAAQN,kBACrDI,gFACM,KAAKG,OAAOP,0BAAoBK,yCAIpCG,UAAYX,mBAAmBS,QAAQ,OAAQN,wEAGnBG,2DACHD,4EACrBE,0JAEiCT,KAAKc,wEACRD,yHAGJb,KAAKe,yEACKf,KAAKgB,0GAGrChB,KAAKiB,qDArDnBhB,mBAAqB,KACrBC,mBAAqB"}