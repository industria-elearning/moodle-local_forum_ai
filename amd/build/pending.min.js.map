{"version":3,"file":"pending.min.js","sources":["../src/pending.js"],"sourcesContent":["import ModalFactory from 'core/modal_factory';\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport { renderPost } from './utils/renderPost';\nimport { get_string as getString } from 'core/str';\n\n/**\n * Inicializa los listeners para mostrar detalles de respuestas AI.\n */\nexport const init = () => {\n    // Botón de ver detalles\n    document.querySelectorAll('.view-details').forEach(btn => {\n        btn.addEventListener('click', e => {\n            const token = e.currentTarget.dataset.token;\n\n            Ajax.call([{\n                methodname: 'local_forum_ai_get_details',\n                args: { token: token },\n            }])[0].done(async data => {\n                // Precargar cadenas\n                const [\n                    modalTitle,\n                    discussionLabel,\n                    noPosts,\n                    aiResponseProposed,\n                    saveLabel,\n                    saveApproveLabel,\n                    rejectLabel\n                ] = await Promise.all([\n                    getString('modal_title_pending', 'local_forum_ai'),\n                    getString('discussion_label', 'local_forum_ai', data.discussion),\n                    getString('no_posts', 'local_forum_ai'),\n                    getString('ai_response_proposed', 'local_forum_ai'),\n                    getString('save', 'local_forum_ai'),\n                    getString('saveapprove', 'local_forum_ai'),\n                    getString('reject', 'local_forum_ai'),\n                ]);\n\n                ModalFactory.create({\n                    type: ModalFactory.types.DEFAULT,\n                    title: modalTitle,\n                    body: renderDiscussion(data, true, {\n                        discussionLabel,\n                        noPosts,\n                        aiResponseProposed,\n                        saveLabel,\n                        saveApproveLabel,\n                        rejectLabel\n                    }),\n                    large: true,\n                }).done(modal => {\n                    modal.show();\n                    initAiEditHandlers(modal.getRoot(), data.token);\n                });\n            }).fail(Notification.exception);\n        });\n    });\n\n    // Botones de aprobar/rechazar desde la tabla\n    document.querySelectorAll('.action-btn').forEach(btn => {\n        btn.addEventListener('click', e => {\n            e.preventDefault();\n            const token = btn.dataset.token;\n            const action = btn.dataset.action;\n\n            Ajax.call([{\n                methodname: 'local_forum_ai_approve_response',\n                args: { token: token, action: action },\n            }])[0].done(() => {\n                const row = btn.closest('tr');\n                if (row) {\n                    row.remove();\n                }\n            }).fail(Notification.exception);\n        });\n    });\n};\n\n/**\n * Construye el HTML para el modal de detalles.\n *\n * @param {Object} data Datos recibidos del servicio AJAX.\n * @param {boolean} editMode Si debe iniciar directamente en modo edición.\n * @param {Object} strings Conjunto de cadenas traducidas\n * @param {string} strings.discussionLabel Texto para el título del debate\n * @param {string} strings.noPosts Texto para cuando no hay posts\n * @param {string} strings.aiResponseProposed Texto para la respuesta AI propuesta\n * @param {string} strings.saveLabel Texto para el botón Guardar\n * @param {string} strings.saveApproveLabel Texto para el botón Guardar y Aprobar\n * @param {string} strings.rejectLabel Texto para el botón Rechazar\n * @returns {Promise<string>} HTML generado\n */\nasync function renderDiscussion(data, editMode = false, strings) {\n    let html = `<h4>${data.course} / ${data.forum}</h4>\n                <h5>${strings.discussionLabel}</h5>`;\n\n    if (data.posts.length === 0) {\n        html += `<p class=\"text-warning\">${strings.noPosts}</p>`;\n    } else {\n        for (const post of data.posts) {\n            html += await renderPost(post);\n        }\n    }\n\n    html += `<div class=\"alert alert-primary mt-4\">\n               <h5><i class=\"fa-solid fa-robot\"></i> ${strings.aiResponseProposed}</h5>\n               <div id=\"airesponse-content\" data-token=\"${data.token}\">`;\n\n    if (editMode) {\n        html += `\n            <textarea id=\"airesponse-edit\" class=\"form-control\" rows=\"5\">${data.airesponse}</textarea>\n            <div class=\"mt-2\">\n                <button class=\"btn btn-success btn-sm save-ai\" data-token=\"${data.token}\">\n                    <i class=\"fa-solid fa-floppy-disk\"></i> ${strings.saveLabel}\n                </button>\n                <button class=\"btn btn-primary btn-sm save-approve-ai\" data-token=\"${data.token}\">\n                    <i class=\"fa-solid fa-check\"></i> ${strings.saveApproveLabel}\n                </button>\n                <button class=\"btn btn-danger btn-sm reject-ai\" data-token=\"${data.token}\">\n                    <i class=\"fa-solid fa-times\"></i> ${strings.rejectLabel}\n                </button>\n            </div>\n        `;\n    } else {\n        html += data.airesponse;\n    }\n\n    html += `</div></div>`;\n    return html;\n}\n\n/**\n * Inicializa los handlers para editar/guardar dentro de un modal específico.\n *\n * @param {object} root El contenedor raíz del modal.\n * @param {string} token Token único de aprobación asociado.\n */\nfunction initAiEditHandlers(root, token) {\n    root.on('click', '.save-ai', e => {\n        e.preventDefault();\n        const newMessage = root.find('#airesponse-edit').val();\n\n        Ajax.call([{\n            methodname: 'local_forum_ai_update_response',\n            args: { token: token, message: newMessage },\n        }])[0].done(response => {\n            root.find('#airesponse-content').html(response.message);\n            location.reload();\n        }).fail(Notification.exception);\n    });\n\n    root.on('click', '.save-approve-ai', e => {\n        e.preventDefault();\n        const newMessage = root.find('#airesponse-edit').val();\n\n        Ajax.call([{\n            methodname: 'local_forum_ai_update_response',\n            args: { token: token, message: newMessage },\n        }])[0].done(() => {\n            Ajax.call([{\n                methodname: 'local_forum_ai_approve_response',\n                args: { token: token, action: 'approve' },\n            }])[0].done(() => {\n                location.reload();\n            }).fail(Notification.exception);\n        }).fail(Notification.exception);\n    });\n\n    root.on('click', '.reject-ai', e => {\n        e.preventDefault();\n\n        Ajax.call([{\n            methodname: 'local_forum_ai_approve_response',\n            args: { token: token, action: 'reject' },\n        }])[0].done(() => {\n            location.reload();\n        }).fail(Notification.exception);\n    });\n}\n"],"names":["renderDiscussion","data","editMode","strings","html","course","forum","discussionLabel","posts","length","noPosts","post","aiResponseProposed","token","airesponse","saveLabel","saveApproveLabel","rejectLabel","document","querySelectorAll","forEach","btn","addEventListener","e","currentTarget","dataset","call","methodname","args","done","async","modalTitle","Promise","all","discussion","create","type","ModalFactory","types","DEFAULT","title","body","large","modal","show","root","on","preventDefault","newMessage","find","val","message","response","location","reload","fail","Notification","exception","action","initAiEditHandlers","getRoot","row","closest","remove"],"mappings":"qgBA4FeA,iBAAiBC,UAAMC,iEAAkBC,+CAChDC,mBAAcH,KAAKI,qBAAYJ,KAAKK,4CACtBH,QAAQI,4BAEA,IAAtBN,KAAKO,MAAMC,OACXL,wCAAmCD,QAAQO,yBAEtC,MAAMC,QAAQV,KAAKO,MACpBJ,YAAc,0BAAWO,aAIjCP,6GACmDD,QAAQS,6FACLX,KAAKY,YAGvDT,MADAF,8FAEmED,KAAKa,8IAEHb,KAAKY,iFACpBV,QAAQY,qIAEed,KAAKY,2EAClCV,QAAQa,qIAEcf,KAAKY,2EAC3BV,QAAQc,yEAKhDhB,KAAKa,WAGjBV,qBACOA,mBAvHS,KAEhBc,SAASC,iBAAiB,iBAAiBC,SAAQC,MAC/CA,IAAIC,iBAAiB,SAASC,UACpBV,MAAQU,EAAEC,cAAcC,QAAQZ,oBAEjCa,KAAK,CAAC,CACPC,WAAY,6BACZC,KAAM,CAAEf,MAAOA,UACf,GAAGgB,MAAKC,MAAAA,aAGJC,WACAxB,gBACAG,QACAE,mBACAG,UACAC,iBACAC,mBACMe,QAAQC,IAAI,EAClB,mBAAU,sBAAuB,mBACjC,mBAAU,mBAAoB,iBAAkBhC,KAAKiC,aACrD,mBAAU,WAAY,mBACtB,mBAAU,uBAAwB,mBAClC,mBAAU,OAAQ,mBAClB,mBAAU,cAAe,mBACzB,mBAAU,SAAU,2CAGXC,OAAO,CAChBC,KAAMC,uBAAaC,MAAMC,QACzBC,MAAOT,WACPU,KAAMzC,iBAAiBC,MAAM,EAAM,CAC/BM,gBAAAA,gBACAG,QAAAA,QACAE,mBAAAA,mBACAG,UAAAA,UACAC,iBAAAA,iBACAC,YAAAA,cAEJyB,OAAO,IACRb,MAAKc,QACJA,MAAMC,gBAsFEC,KAAMhC,OAC9BgC,KAAKC,GAAG,QAAS,YAAYvB,IACzBA,EAAEwB,uBACIC,WAAaH,KAAKI,KAAK,oBAAoBC,oBAE5CxB,KAAK,CAAC,CACPC,WAAY,iCACZC,KAAM,CAAEf,MAAOA,MAAOsC,QAASH,eAC/B,GAAGnB,MAAKuB,WACRP,KAAKI,KAAK,uBAAuB7C,KAAKgD,SAASD,SAC/CE,SAASC,YACVC,KAAKC,sBAAaC,cAGzBZ,KAAKC,GAAG,QAAS,oBAAoBvB,IACjCA,EAAEwB,uBACIC,WAAaH,KAAKI,KAAK,oBAAoBC,oBAE5CxB,KAAK,CAAC,CACPC,WAAY,iCACZC,KAAM,CAAEf,MAAOA,MAAOsC,QAASH,eAC/B,GAAGnB,MAAK,mBACHH,KAAK,CAAC,CACPC,WAAY,kCACZC,KAAM,CAAEf,MAAOA,MAAO6C,OAAQ,cAC9B,GAAG7B,MAAK,KACRwB,SAASC,YACVC,KAAKC,sBAAaC,cACtBF,KAAKC,sBAAaC,cAGzBZ,KAAKC,GAAG,QAAS,cAAcvB,IAC3BA,EAAEwB,+BAEGrB,KAAK,CAAC,CACPC,WAAY,kCACZC,KAAM,CAAEf,MAAOA,MAAO6C,OAAQ,aAC9B,GAAG7B,MAAK,KACRwB,SAASC,YACVC,KAAKC,sBAAaC,cA5HTE,CAAmBhB,MAAMiB,UAAW3D,KAAKY,aAE9C0C,KAAKC,sBAAaC,iBAK7BvC,SAASC,iBAAiB,eAAeC,SAAQC,MAC7CA,IAAIC,iBAAiB,SAASC,IAC1BA,EAAEwB,uBACIlC,MAAQQ,IAAII,QAAQZ,MACpB6C,OAASrC,IAAII,QAAQiC,qBAEtBhC,KAAK,CAAC,CACPC,WAAY,kCACZC,KAAM,CAAEf,MAAOA,MAAO6C,OAAQA,WAC9B,GAAG7B,MAAK,WACFgC,IAAMxC,IAAIyC,QAAQ,MACpBD,KACAA,IAAIE,YAETR,KAAKC,sBAAaC"}