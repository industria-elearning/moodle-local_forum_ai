{"version":3,"file":"pending.min.js","sources":["../src/pending.js"],"sourcesContent":["\nimport ModalFactory from 'core/modal_factory';\nimport Ajax from 'core/ajax';\nimport Notification from 'core/notification';\nimport { renderPost } from './utils/renderPost';\n\n/**\n * Inicializa los listeners para mostrar detalles de respuestas AI.\n */\nexport const init = () => {\n    // Botón de ver detalles (ya lo tenías)\n    document.querySelectorAll('.view-details').forEach(btn => {\n        btn.addEventListener('click', e => {\n            const token = e.currentTarget.dataset.token;\n\n            Ajax.call([{\n                methodname: 'local_forum_ai_get_details',\n                args: { token: token },\n            }])[0].done(data => {\n                ModalFactory.create({\n                    type: ModalFactory.types.DEFAULT,\n                    title: 'Detalles del debate',\n                    body: renderDiscussion(data),\n                    large: true,\n                }).done(modal => {\n                    modal.show();\n                });\n            }).fail(Notification.exception);\n        });\n    });\n\n    // Botones de aprobar/rechazar\n    document.querySelectorAll('.action-btn').forEach(btn => {\n        btn.addEventListener('click', e => {\n            e.preventDefault();\n            const token = btn.dataset.token;\n            const action = btn.dataset.action;\n\n            Ajax.call([{\n                methodname: 'local_forum_ai_approve_response',\n                args: { token: token, action: action },\n            }])[0].done(() => {\n                // Quitar la fila de la tabla\n                const row = btn.closest('tr');\n                if (row) {\n                    row.remove();\n                }\n            }).fail(Notification.exception);\n        });\n    });\n};\n/**\n * Construye el HTML para el modal de detalles.\n *\n * @param {Object} data Datos recibidos del servicio AJAX\n * @returns {string} HTML\n */\nfunction renderDiscussion(data) {\n    let html = `<h4>${data.course} / ${data.forum}</h4>\n                <h5>Debate: ${data.discussion}</h5>`;\n\n    if (data.posts.length === 0) {\n        html += '<p class=\"text-warning\">No se encontraron posts en este debate.</p>';\n    } else {\n        data.posts.forEach((post) => {\n            html += renderPost(post);\n        });\n    }\n\n    html += `<div class=\"alert alert-primary mt-4\">\n               <h5><i class=\"fa-solid fa-robot\"></i> Respuesta AI propuesta \n                   <button class=\"btn btn-sm btn-link edit-ai\" data-token=\"${data.token}\">\n                     <i class=\"fa fa-pencil\"></i>\n                   </button>\n               </h5>\n               <div id=\"airesponse-content\" data-token=\"${data.token}\">${data.airesponse}</div>\n             </div>`;\n    return html;\n}\n\n// Delegamos evento para edición\ndocument.addEventListener('click', e => {\n    if (e.target.closest('.edit-ai')) {\n        const btn = e.target.closest('.edit-ai');\n        const token = btn.dataset.token;\n        const container = document.getElementById('airesponse-content');\n        const currentText = container.innerHTML;\n\n        // Reemplazar contenido por textarea y botón guardar\n        container.innerHTML = `\n            <textarea id=\"airesponse-edit\" class=\"form-control\" rows=\"5\">${currentText}</textarea>\n            <button class=\"btn btn-success btn-sm mt-2 save-ai\" data-token=\"${token}\">\n              <i class=\"fa-solid fa-floppy-disk\"></i>\n            </button>\n        `;\n    }\n\n    if (e.target.closest('.save-ai')) {\n        const btn = e.target.closest('.save-ai');\n        const token = btn.dataset.token;\n        const newMessage = document.getElementById('airesponse-edit').value;\n\n        Ajax.call([{\n            methodname: 'local_forum_ai_update_response',\n            args: { token: token, message: newMessage },\n        }])[0].done(response => {\n            const container = document.getElementById('airesponse-content');\n            container.innerHTML = response.message;\n            // Opcional: recargar página para ver en tabla\n            location.reload();\n        }).fail(Notification.exception);\n    }\n});\n\n"],"names":["renderDiscussion","data","html","course","forum","discussion","posts","length","forEach","post","token","airesponse","document","querySelectorAll","btn","addEventListener","e","currentTarget","dataset","call","methodname","args","done","create","type","ModalFactory","types","DEFAULT","title","body","large","modal","show","fail","Notification","exception","preventDefault","action","row","closest","remove","target","container","getElementById","currentText","innerHTML","newMessage","value","message","response","location","reload"],"mappings":"+eAyDSA,iBAAiBC,UAClBC,mBAAcD,KAAKE,qBAAYF,KAAKG,oDACdH,KAAKI,2BAEL,IAAtBJ,KAAKK,MAAMC,OACXL,MAAQ,sEAERD,KAAKK,MAAME,SAASC,OAChBP,OAAQ,0BAAWO,SAI3BP,iNAEyED,KAAKS,oLAIxBT,KAAKS,mBAAUT,KAAKU,0CAEnET,mBApES,KAEhBU,SAASC,iBAAiB,iBAAiBL,SAAQM,MAC/CA,IAAIC,iBAAiB,SAASC,UACpBN,MAAQM,EAAEC,cAAcC,QAAQR,oBAEjCS,KAAK,CAAC,CACPC,WAAY,6BACZC,KAAM,CAAEX,MAAOA,UACf,GAAGY,MAAKrB,8BACKsB,OAAO,CAChBC,KAAMC,uBAAaC,MAAMC,QACzBC,MAAO,sBACPC,KAAM7B,iBAAiBC,MACvB6B,OAAO,IACRR,MAAKS,QACJA,MAAMC,aAEXC,KAAKC,sBAAaC,iBAK7BvB,SAASC,iBAAiB,eAAeL,SAAQM,MAC7CA,IAAIC,iBAAiB,SAASC,IAC1BA,EAAEoB,uBACI1B,MAAQI,IAAII,QAAQR,MACpB2B,OAASvB,IAAII,QAAQmB,qBAEtBlB,KAAK,CAAC,CACPC,WAAY,kCACZC,KAAM,CAAEX,MAAOA,MAAO2B,OAAQA,WAC9B,GAAGf,MAAK,WAEFgB,IAAMxB,IAAIyB,QAAQ,MACpBD,KACAA,IAAIE,YAETP,KAAKC,sBAAaC,kBAkCjCvB,SAASG,iBAAiB,SAASC,OAC3BA,EAAEyB,OAAOF,QAAQ,YAAa,OAExB7B,MADMM,EAAEyB,OAAOF,QAAQ,YACXrB,QAAQR,MACpBgC,UAAY9B,SAAS+B,eAAe,sBACpCC,YAAcF,UAAUG,UAG9BH,UAAUG,+FACyDD,gHACGlC,uGAMtEM,EAAEyB,OAAOF,QAAQ,YAAa,OAExB7B,MADMM,EAAEyB,OAAOF,QAAQ,YACXrB,QAAQR,MACpBoC,WAAalC,SAAS+B,eAAe,mBAAmBI,oBAEzD5B,KAAK,CAAC,CACPC,WAAY,iCACZC,KAAM,CAAEX,MAAOA,MAAOsC,QAASF,eAC/B,GAAGxB,MAAK2B,WACUrC,SAAS+B,eAAe,sBAChCE,UAAYI,SAASD,QAE/BE,SAASC,YACVlB,KAAKC,sBAAaC"}